
-- File auto generated by TM emulator

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
library std;                  -- for Printing
use std.textio.all;

use work.gtl_pkg.all;
use work.fdl_pkg.all;

entity gtl_module_inv_mass_TB is
end gtl_module_inv_mass_TB;

architecture rtl of gtl_module_inv_mass_TB is

component gtl_module
    port(
-- LHC clock, GCT data and condition output
        clk                 : in std_logic;
        eg_data             : in calo_objects_array(0 to nr_eg_objects-1);
        jet_data            : in calo_objects_array(0 to nr_jet_objects-1);
        tau_data            : in calo_objects_array(0 to nr_tau_objects-1);
        ett_data            : in std_logic_vector(max_esums_bits-1 downto 0);
        ht_data             : in std_logic_vector(max_esums_bits-1 downto 0);
        etm_data            : in std_logic_vector(max_esums_bits-1 downto 0);
        htm_data            : in std_logic_vector(max_esums_bits-1 downto 0);
        external_conditions : in std_logic_vector(nr_external_conditions-1 downto 0);
        algo_o              : out std_logic_vector(nr_algos-1 downto 0));
end component gtl_module;

    constant LHC_CLK_PERIOD  :   time :=  25.0 ns;

    signal lhc_clk             : std_logic;
    signal eg_data             : calo_objects_array(0 to nr_eg_objects-1) := (others => (others => '0'));
    signal jet_data            : calo_objects_array(0 to nr_jet_objects-1) := (others => (others => '0'));
    signal tau_data            : calo_objects_array(0 to nr_tau_objects-1) := (others => (others => '0'));
    signal ett_data            : std_logic_vector(max_esums_bits-1 downto 0) := (others => '0');
    signal ht_data             : std_logic_vector(max_esums_bits-1 downto 0) := (others => '0');
    signal etm_data            : std_logic_vector(max_esums_bits-1 downto 0) := (others => '0');
    signal htm_data            : std_logic_vector(max_esums_bits-1 downto 0) := (others => '0');
    signal external_conditions : std_logic_vector(nr_external_conditions-1 downto 0) := (others => '0');

--*********************************Main Body of Code**********************************
begin

    -- Clocks
    process
    begin
        lhc_clk  <=  '1';
        wait for LHC_CLK_PERIOD/2;
        lhc_clk  <=  '0';
        wait for LHC_CLK_PERIOD/2;
    end process;

    process
    begin
--         wait for 10 ns;
--         eg_data <= (X"0923", X"0000", X"0000", X"0000", X"0000", X"0000", X"0000", X"0000");
--         jet_data <= (X"06e8", X"0000", X"0000", X"0000", X"0000", X"0000", X"0000", X"0000");
--         wait for LHC_CLK_PERIOD;
-- ...
--         wait;

{InvMassObjects}

    end process;

 ------------------- Instantiate  modules  -----------------

dut: gtl_module
   port map(
        clk                 => lhc_clk,
        eg_data             => eg_data,
        jet_data            => jet_data,
        tau_data            => tau_data,
        ett_data            => ett_data,
        ht_data             => ht_data,
        etm_data            => etm_data,
        htm_data            => htm_data,
        external_conditions => external_conditions,
        algo_o              => open
   );

end rtl;
