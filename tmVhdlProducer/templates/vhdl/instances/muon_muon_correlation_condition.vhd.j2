{%- block instantiate_muon_muon_correlation_condition %}
  {%- set o1 = condition.objects[0] %}
  {%- set o2 = condition.objects[1] %}
{{ condition.vhdl_signal }}_i: entity work.muon_muon_correlation_condition
    generic map(
        muon1_object_low => {{ o1.sliceLow }}, muon1_object_high => {{ o1.sliceHigh }}, 
    {%- if o1.operator == 'false' %}
        pt_ge_mode_muon1 => {{ o1.operator }}, 
    {%- endif %}        
        pt_threshold_muon1 => X"{{ o1.threshold|X04 }}",
    {%- if o1.etaNrCuts > 0 %}
        nr_eta_windows_muon1 => {{ o1.etaNrCuts }},
        eta_w1_upper_limit_muon1 => X"{{ o1.etaW1UpperLimit|X04 }}", eta_w1_lower_limit_muon1 => X"{{ o1.etaW1LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o1.etaNrCuts > 1 %}
        eta_w2_upper_limit_muon1 => X"{{ o1.etaW2UpperLimit|X04 }}", eta_w2_lower_limit_muon1 => X"{{ o1.etaW2LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o1.etaNrCuts > 2 %}
        eta_w3_upper_limit_muon1 => X"{{ o1.etaW3UpperLimit|X04 }}", eta_w3_lower_limit_muon1 => X"{{ o1.etaW3LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o1.etaNrCuts > 3 %}
        eta_w4_upper_limit_muon1 => X"{{ o1.etaW4UpperLimit|X04 }}", eta_w4_lower_limit_muon1 => X"{{ o1.etaW4LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o1.etaNrCuts > 4 %}
        eta_w5_upper_limit_muon1 => X"{{ o1.etaW5UpperLimit|X04 }}", eta_w5_lower_limit_muon1 => X"{{ o1.etaW5LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o1.phiFullRange  == 'false' %}
        phi_full_range_muon1 => {{ o1.phiFullRange }}, phi_w1_upper_limit_muon1 => X"{{ o1.phiW1UpperLimit|X04 }}", phi_w1_lower_limit_muon1 => X"{{ o1.phiW1LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o1.phiW2Ignore  == 'false' and o1.phiFullRange  == 'false' %}
        phi_w2_ignore_muon1 => {{ o1.phiW2Ignore }}, phi_w2_upper_limit_muon1 => X"{{ o1.phiW2UpperLimit|X04 }}", phi_w2_lower_limit_muon1 => X"{{ o1.phiW2LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o1.charge != "ign" %}
        requested_charge_muon1 => "{{ o1.charge }}", 
    {%- endif %}        
    {%- if o1.qualityLUT|X04 != "FFFF" %}
        qual_lut_muon1 => X"{{ o1.qualityLUT|X04 }}", 
    {%- endif %}        
    {%- if o1.isolationLUT|X01 != "F" %}
        iso_lut_muon1 => X"{{ o1.isolationLUT|X01 }}",
    {%- endif %}        
    {%- if o1.hasUpt == 'true' %}
        upt_cut_muon1 => {{ o1.hasUpt }}, 
        upt_upper_limit_muon1 => X"{{ o1.uptUpperLimit|X04 }}", 
        upt_lower_limit_muon1 => X"{{ o1.uptLowerLimit|X04 }}", 
        ip_lut_muon1 => X"{{ o1.impactParameterLUT|X01 }}",
    {%- endif %}        
        muon2_object_low => {{ o2.sliceLow }}, muon2_object_high => {{ o2.sliceHigh }}, 
    {%- if o2.operator == 'false' %}
        pt_ge_mode_muon2 => {{ o2.operator }}, 
    {%- endif %}        
        pt_threshold_muon2 => X"{{ o2.threshold|X04 }}",
    {%- if o2.etaNrCuts > 0 %}
        nr_eta_windows_muon2 => {{ o2.etaNrCuts }},
        eta_w1_upper_limit_muon2 => X"{{ o2.etaW1UpperLimit|X04 }}", eta_w1_lower_limit_muon2 => X"{{ o2.etaW1LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o2.etaNrCuts > 1 %}
        eta_w2_upper_limit_muon2 => X"{{ o2.etaW2UpperLimit|X04 }}", eta_w2_lower_limit_muon2 => X"{{ o2.etaW2LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o2.etaNrCuts > 2 %}
        eta_w3_upper_limit_muon2 => X"{{ o2.etaW3UpperLimit|X04 }}", eta_w3_lower_limit_muon2 => X"{{ o2.etaW3LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o2.etaNrCuts > 3 %}
        eta_w4_upper_limit_muon2 => X"{{ o2.etaW4UpperLimit|X04 }}", eta_w4_lower_limit_muon2 => X"{{ o2.etaW4LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o2.etaNrCuts > 4 %}
        eta_w5_upper_limit_muon2 => X"{{ o2.etaW5UpperLimit|X04 }}", eta_w5_lower_limit_muon2 => X"{{ o2.etaW5LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o2.phiFullRange  == 'false' %}
        phi_full_range_muon2 => {{ o2.phiFullRange }}, phi_w1_upper_limit_muon2 => X"{{ o2.phiW1UpperLimit|X04 }}", phi_w1_lower_limit_muon2 => X"{{ o2.phiW1LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o2.phiW2Ignore  == 'false' and o2.phiFullRange  == 'false' %}
        phi_w2_ignore_muon2 => {{ o2.phiW2Ignore }}, phi_w2_upper_limit_muon2 => X"{{ o2.phiW2UpperLimit|X04 }}", phi_w2_lower_limit_muon2 => X"{{ o2.phiW2LowerLimit|X04 }}",
    {%- endif %}        
    {%- if o2.charge != "ign" %}
        requested_charge_muon2 => "{{ o2.charge }}", 
    {%- endif %}        
    {%- if o2.qualityLUT|X04 != "FFFF" %}
        qual_lut_muon2 => X"{{ o2.qualityLUT|X04 }}", 
    {%- endif %}        
    {%- if o2.isolationLUT|X01 != "F" %}
        iso_lut_muon2 => X"{{ o2.isolationLUT|X01 }}",
    {%- endif %}        
    {%- if o2.hasUpt == 'true' %}
        upt_cut_muon2 => {{ o2.hasUpt }}, 
        upt_upper_limit_muon2 => X"{{ o2.uptUpperLimit|X04 }}", 
        upt_lower_limit_muon2 => X"{{ o2.uptLowerLimit|X04 }}", 
        ip_lut_muon2 => X"{{ o2.impactParameterLUT|X01 }}",
    {%- endif %}        
    {%- if condition.chargeCorrelation != "ig" %}
        requested_charge_correlation => "{{ condition.chargeCorrelation }}",
    {%- endif %}        
    {%- if condition.mass.enabled == 'true' and condition.mass.type == condition.mass.InvariantMassDeltaRType %}
        mass_cut => {{ condition.mass.enabled }}, mass_type => INVARIANT_MASS_DIV_DR_TYPE,
    {%- else %}
        {%- if condition.deltaEta.enabled == 'true' %}
        deta_cut => {{ condition.deltaEta.enabled }}, 
        {%- endif %}        
        {%- if condition.deltaPhi.enabled == 'true' %}
        dphi_cut => {{ condition.deltaPhi.enabled }}, 
        {%- endif %}        
        {%- if condition.deltaR.enabled == 'true' %}
        dr_cut => {{ condition.deltaR.enabled }}, 
        {%- endif %}        
        {%- if condition.mass.enabled == 'true' %}
        mass_cut => {{ condition.mass.enabled }}, 
            {%- if condition.mass.type == 0 %}
        mass_type => INVARIANT_MASS_TYPE, 
            {%- elif condition.mass.type == 1 %}
        mass_type => TRANSVERSE_MASS_TYPE, 
            {%- endif %}        
        {%- endif %}        
        {%- if condition.twoBodyPt.enabled == 'true' %}
        twobody_pt_cut => {{ condition.twoBodyPt.enabled }}, 
        {%- endif %}        
    {%- endif %}        
    {%- if condition.mass.enabled == 'true' or condition.twoBodyPt.enabled == 'true'  %}
        pt_width => {{ o1.type|upper }}_PT_VECTOR_WIDTH, 
        upt_width => {{ o1.type|upper }}_UPT_VECTOR_WIDTH, 
    {%- endif %}        
    {%- if condition.mass.enabled == 'true' and condition.mass.type == condition.mass.InvariantMassDeltaRType %}
        mass_cosh_cos_precision => {{ o1.type|upper }}_{{ o2.type|upper }}_COSH_COS_PRECISION, 
        cosh_cos_width => {{ o1.type|upper }}_{{ o2.type|upper }}_COSH_COS_VECTOR_WIDTH,
        mass_div_dr_vector_width => {{ o1.type|upper }}_{{ o2.type|upper }}_MASS_DIV_DR_VECTOR_WIDTH,
        mass_div_dr_threshold => X"{{ condition.mass.lower|X21 }}",
    {%- else %}
        {%- if condition.deltaEta.enabled == 'true' %}
        diff_eta_upper_limit_vector => X"{{ condition.deltaEta.upper|X08 }}", diff_eta_lower_limit_vector => X"{{ condition.deltaEta.lower|X08 }}",
        {%- endif %}        
        {%- if condition.deltaPhi.enabled == 'true' %}
        diff_phi_upper_limit_vector => X"{{ condition.deltaPhi.upper|X08 }}", diff_phi_lower_limit_vector => X"{{ condition.deltaPhi.lower|X08 }}",
        {%- endif %}        
        {%- if condition.deltaR.enabled == 'true' %}
        dr_upper_limit_vector => X"{{ condition.deltaR.upper|X16 }}", dr_lower_limit_vector => X"{{ condition.deltaR.lower|X16 }}",
        {%- endif %}        
        {%- if condition.mass.enabled == 'true' %}
        mass_cosh_cos_precision => {{ o1.type|upper }}_{{ o2.type|upper }}_COSH_COS_PRECISION, 
        cosh_cos_width => {{ o1.type|upper }}_{{ o2.type|upper }}_COSH_COS_VECTOR_WIDTH,
        mass_upper_limit => X"{{ condition.mass.upper|X16 }}",
        mass_lower_limit => X"{{ condition.mass.lower|X16 }}",
        {%- endif %}        
        {%- if condition.twoBodyPt.enabled == 'true' %}
        pt_sq_threshold_vector => X"{{ condition.twoBodyPt.threshold|X16 }}", 
        sin_cos_width => CALO_SIN_COS_VECTOR_WIDTH, 
        pt_sq_sin_cos_precision => {{ o1.type|upper }}_{{ o2.type|upper }}_SIN_COS_PRECISION,
        {%- endif %}        
    {%- endif %}        
        same_bx => {{ condition.objectsInSameBx }}
    )
    port map(lhc_clk, {{ o1.type|lower }}_bx_{{ o1.bx }}, {{ o2.type|lower }}_bx_{{ o2.bx }},
        ls_charcorr_double_bx_{{ o1.bx }}_bx_{{ o2.bx }}, os_charcorr_double_bx_{{ o1.bx }}_bx_{{ o2.bx }},
    {%- if condition.mass.type == condition.mass.InvariantMassDeltaRType %}
        mass_div_dr => {{ o1.type|lower }}_{{ o2.type|lower }}_bx_{{ o1.bx }}_bx_{{ o2.bx }}_mass_div_dr,
    {%- else %}
        {%- if condition.deltaEta.enabled == 'true' or condition.deltaR.enabled == 'true' %}
        diff_eta => diff_{{ o1.type|lower }}_{{ o2.type|lower }}_bx_{{ o1.bx }}_bx_{{ o2.bx }}_eta_vector,        
        {%- endif %}        
        {%- if condition.deltaPhi.enabled == 'true' or condition.deltaR.enabled == 'true' %}
        diff_phi => diff_{{ o1.type|lower }}_{{ o2.type|lower }}_bx_{{ o1.bx }}_bx_{{ o2.bx }}_phi_vector,
        {%- endif %}        
        {%- if condition.mass.enabled == 'true' or condition.twoBodyPt.enabled == 'true' %}
        pt1 => {{ o1.type|lower }}_pt_vector_bx_{{ o1.bx }}, pt2 => {{ o2.type|lower }}_pt_vector_bx_{{ o2.bx }},
        {%- endif %}        
        {%- if condition.mass.enabled == 'true' %}
        cosh_deta => {{ o1.type|lower }}_{{ o2.type|lower }}_bx_{{ o1.bx }}_bx_{{ o2.bx }}_cosh_deta_vector, cos_dphi => {{ o1.type|lower }}_{{ o2.type|lower }}_bx_{{ o1.bx }}_bx_{{ o2.bx }}_cos_dphi_vector,
        {%- endif %}        
        {%- if condition.twoBodyPt.enabled == 'true' %}
        cos_phi_1_integer => {{ o1.type|lower }}_cos_phi_bx_{{ o1.bx }}, cos_phi_2_integer => {{ o2.type|lower }}_cos_phi_bx_{{ o2.bx }}, sin_phi_1_integer => {{ o1.type|lower }}_sin_phi_bx_{{ o1.bx }}, sin_phi_2_integer => {{ o2.type|lower }}_sin_phi_bx_{{ o2.bx }},
        {%- endif %}        
    {%- endif %}
        condition_o => {{ condition.vhdl_signal }});
{%- endblock instantiate_muon_muon_correlation_condition %}
{# eof #}
